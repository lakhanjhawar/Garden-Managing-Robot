#hide.
#show occurs(A,T).
#show holds(F,T).
#show -holds(F,T).

num(1..3).


%%%%%%%%Fluents%%%%%%%%%


  fluent(res_opened(1..3)).
  fluent(res_broke(1..3)). 	
  fluent(water_levelled(1..3)).
  fluent(symptom(1..3,1..6)).
  fluent(deficiency(1..3,1..6)).
  fluent(applied(1..3,1..6)).


%%%%%%%%%Actions%%%%%%%%%%%


  action(res_open(1..3)).
  action(res_close(1..3)). 	
  action(supply_water(1..3)).
  action(apply(1..3,1..6)).
  action(identify_deficiency).


%%%%%%%%%Dynamic Causal Laws%%%%


% Actions open & close cause change in reservoir door to save or disperse water
  holds(res_opened(GARDEN),T+1):-occurs(res_open(GARDEN),T),-holds(res_opened(GARDEN),T),step(T).
 -holds(res_opened(GARDEN),T+1):-occurs(res_close(GARDEN),T),holds(res_opened(GARDEN),T),step(T).

% Action supply water causes water level maintained in the fields.
  holds(water_levelled(GARDEN),T+1):-occurs(supply_water(GARDEN),T),-holds(res_opened(GARDEN),T),-holds(water_levelled(GARDEN),T),step(T).

% Action identify_deficiency helps to find the deficiency according to the symptoms.
  holds(deficiency(GARDEN,Y),T+1):-occurs(identify_deficiency,T),holds(symptom(GARDEN,X),T),Y=X,step(T).

% Action apply causes the manure to be applied on the field.
  holds(applied(GARDEN,Z),T+1):-occurs(apply(GARDEN,A),T),-holds(res_opened(GARDEN),T),holds(water_levelled(GARDEN),T),holds(deficiency(GARDEN,Y),T),Z=Y,Z=A,step(T).


%%%%%%%%%%%Parallel Actions%%%%%%%%%

% Actions supply_water & apply manure can be performed parallely. Both together causes applied as direct effect & water_levelled as indirect effect.
  holds(applied(GARDEN,Z),T+1):-occurs(supply_water(GARDEN),T),occurs(apply(GARDEN,A),T),-holds(res_opened(GARDEN),T),-holds(water_levelled(GARDEN),T),holds(deficiency(GARDEN,Y),T),Z=Y,Z=A,step(T).


%%%%%%%%%%State constraints%%%%%%%%%%


% Water is not levelled in the fields if reservoir is in open state.
 -holds(water_levelled(GARDEN),T):-holds(res_opened(GARDEN),T),step(T).	

% Deficiency is false if corresponding manure is applied.
 -holds(deficiency(GARDEN,Y),T):-holds(applied(GARDEN,Z),T),Y=Z,step(T).

% Manure Applied is false if its respective symptom is true.
 -holds(applied(GARDEN,Z),T):-holds(symptom(GARDEN,X),T),Z=X,step(T).

% Symptom is false in that state if corresponding manure is applied.
 -holds(symptom(GARDEN,X),T):-holds(applied(GARDEN,Z),T),X=Z,step(T).


%%%%%%%%%%%Axioms of Inertia%%%%%%%%

  holds(F,T+1):-holds(F,T),not -holds(F,T+1),step(T).
 -holds(F,T+1):--holds(F,T),not holds(F,T+1),step(T).


%%%%%%%%%%%%Executability Preconditions%%%%%%%


% Water should not be supplied if manure is applied in that state.
:-occurs(supply_water(GARDEN),T),holds(applied(GARDEN,Z),T),step(T).

% Water should not be supplied if water level is already maintained.
:-occurs(supply_water(GARDEN),T),holds(water_levelled(GARDEN),T),step(T).


%%%%%%%%%Axioms for Observation%%%%%%%%%

:-fluent(F),step(T),holds(F,T),-obs(F,T).
:-fluent(F),step(T),-holds(F,T),obs(F,T).



%%%%%%%%%Exogenous Actions%%%%%%%

  ex_action(res_breakage(1..3)).

% Exogenous action (reservoir breakage) causes reservoir to be broken. 
  holds(res_broke(GARDEN),T+1):-occurs(res_breakage(GARDEN),T),step(T).

% Reservoir is opened if reservoir is broke.
  holds(res_opened(GARDEN),T):-holds(res_broke(GARDEN),T),step(T).   	
 -holds(res_opened(GARDEN1),T):-holds(res_broke(GARDEN2),T),GARDEN1!=GARDEN2,num(GARDEN1),num(GARDEN2),step(T).   	

% Water & manure should not be supplied if reservoir is broken.
:-occurs(supply_water(GARDEN),T),holds(res_broke(GARDEN),T),step(T).
:-occurs(apply(A),T),holds(res_broke(GARDEN),T),step(T).



%%%%%%%%%%%Heuristics%%%%%%%%


% Water should not be applied in next time step of applied(X). Assumption that the crops require two time steps to absorb manure.
:-occurs(supply_water(GARDEN),T),holds(applied(GARDEN,Z),T-1),step(T),T>0.

% Reservoir should not be opened next step to manure applied. The manure might not be absorbed properly by the crops as per assumption.
:-occurs(res_open(GARDEN),T),holds(applied(GARDEN,Z),T-1),step(T),T>0.

% Reservoir should not be opened when manure is being applied. Below constraint helps to avert apply & res_open actions occur parallely.
:-occurs(res_open(GARDEN),T),holds(applied(GARDEN,Z),T+1),step(T).

% Water absorbed after 2 time steps.
-holds(water_levelled(GARDEN),T):-holds(water_levelled(GARDEN),T-1),holds(water_levelled(GARDEN),T-2),step(T),T>1.
